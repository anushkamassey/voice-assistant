import speech_recognition as sr
import pyttsx3
import webbrowser
import datetime
import wikipedia

# Initialize the text-to-speech engine
engine = pyttsx3.init()

def speak(text):
    """Convert text to speech"""
    engine.say(text)
    engine.runAndWait()

def listen():
    """Listen to the user's voice input"""
    recognizer = sr.Recognizer()
    with sr.Microphone() as source:
        print("Listening...")
        recognizer.adjust_for_ambient_noise(source)
        audio = recognizer.listen(source)

    try:
        print("Recognizing...")
        query = recognizer.recognize_google(audio, language='en-US')
        print(f"You said: {query}")
    except sr.UnknownValueError:
        speak("Sorry, I did not understand that.")
        return None
    except sr.RequestError:
        speak("Sorry, my speech service is down.")
        return None

    return query

def greet_user():
    """Greet the user based on the time of day"""
    hour = datetime.datetime.now().hour
    if hour < 12:
        speak("Good morning!")
    elif 12 <= hour < 18:
        speak("Good afternoon!")
    else:
        speak("Good evening!")

def respond_to_command(command):
    """Respond to various commands"""
    command = command.lower()

    if 'time' in command:
        current_time = datetime.datetime.now().strftime('%I:%M %p')
        speak(f"The time is {current_time}")

    elif 'wikipedia' in command:
        speak("Searching Wikipedia...")
        query = command.replace('wikipedia', '')
        try:
            summary = wikipedia.summary(query, sentences=2)
            speak("According to Wikipedia")
            speak(summary)
        except wikipedia.exceptions.DisambiguationError:
            speak("There are multiple entries for this topic, please be more specific.")
        except wikipedia.exceptions.PageError:
            speak("I couldn't find any information on that topic.")

    elif 'open' in command:
        if 'browser' in command:
            speak("Opening web browser")
            webbrowser.open('https://www.google.com')

    elif 'exit' in command or 'stop' in command:
        speak("Goodbye!")
        return False

    else:
        speak("I did not understand that command.")

    return True

if __name__ == "__main__":
    greet_user()
    running = True
    while running:
        command = listen()
        if command:
            running = respond_to_command(command)
